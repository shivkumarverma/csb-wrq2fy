{"version":3,"sources":["App.js","index.js"],"names":["App","useState","temp","setTemp","weather","setWeather","city","setCity","URL","getWheather","fetch","then","res","json","main","useEffect","className","map","e","title","id","type","value","onChange","target","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAGe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,SAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAIMC,EAAG,4DAAwDF,EAAxD,wDAEHG,EAAc,WAClBC,MAAMF,GACHG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLT,EAAQS,EAAIE,MACZT,EAAWO,EAAIR,aAUrB,OANAW,qBAAU,WACRN,MACC,IAKD,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,qDAAf,kCAIA,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,qBAAsCV,KACtC,qBAAKU,UAAU,YAAf,SACE,6BAAYA,UAAU,kBAAtB,UACE,8BAAId,EAAKA,KAAT,YACA,wBAAQc,UAAU,oBAAlB,SACGZ,EAAQa,KAAI,SAACC,GAAD,OACX,sBAAMC,MAAM,eAAZ,SAA4BD,EAAEJ,oBAOxC,sBAAKE,UAAU,uCAAf,UACE,sBAAMA,UAAU,mBAAmBI,GAAG,uBAAtC,6BAGA,uBACEC,KAAK,OACLL,UAAU,eACV,aAAW,uBACX,mBAAiB,uBACjBM,MAAOhB,EACPiB,SAAU,SAACL,GACTX,EAAQW,EAAEM,OAAOF,UAGrB,wBACEN,UAAU,4BACVK,KAAK,SACLI,QAAShB,EAHX,sBCxDR,IAAMiB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC9B,EAAD,MAEF0B,I","file":"static/js/main.8bc01e8a.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const [temp, setTemp] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const [city, setCity] = useState(\"Delhi\");\n\n  // console.log(city);\n\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=aa8176b8ee208df3e864866f2286e1c7&units=metric`;\n\n  const getWheather = () => {\n    fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n        setTemp(res.main);\n        setWeather(res.weather);\n      });\n  };\n\n  useEffect(() => {\n    getWheather();\n  }, []);\n\n  // console.log(temp);\n\n  return (\n    <div className=\"container my-4\">\n      <div className=\"container-fluid bg-light my-2 p-2 border rounded-1\">\n        Live Weather Forcast\n      </div>\n\n      <div className=\"card\">\n        <div className=\"card-header\">Temp in {city}</div>\n        <div className=\"card-body\">\n          <blockquote className=\"blockquote mb-0\">\n            <p>{temp.temp} Â°C</p>\n            <footer className=\"blockquote-footer\">\n              {weather.map((e) => (\n                <cite title=\"Source Title\">{e.main}</cite>\n              ))}\n            </footer>\n          </blockquote>\n        </div>\n      </div>\n\n      <div className=\"input-group input-group-sm mb-3 my-3\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n          Enter city Name\n        </span>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          aria-label=\"Sizing example input\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n          value={city}\n          onChange={(e) => {\n            setCity(e.target.value);\n          }}\n        />\n        <button\n          className=\"btn btn-outline-secondary\"\n          type=\"button\"\n          onClick={getWheather}\n        >\n          Go\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}